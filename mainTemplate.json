{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/arsenvlad/zoomdata-byol-solution-template/master",
      "metadata": {
        "description": "Base URL of the solution template gallery package",
        "artifactsBaseUrl": ""
      }
    },
    "location": {
      "type": "string",
      "metadata": { "description": "Location" }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual machine"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username for the virtual machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Admin password for the virtual machine"
      }
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Authentication type for the virtual machine"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the virtual machine"
      }
    },
    "storageAccountNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Parameter that specifies if an new or an existing storage account should be used for deploying the virtual machine"
      }
    },
    "storageAccountResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Storage account resource group for future cases when existing storage account is used"
      }
    },
    "storageAccount": {
      "type": "string",
      "metadata": { "description": "Globally unique storage account name" }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": { "description": "Storage account type" }
    },
    "publicIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Parameter that specifies if an new or an existing public IP should be used for deploying the virtual machine"
      }
    },
    "publicIPAddressResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Storage account resource group for future cases when existing public IP is used"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": { "description": "Public IP Address name" }
    },
    "dnsName": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "Public IP DNS label" }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Parameter that specifies if an new or an existing virtual network should be used for deploying the virtual machine"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network Resource Group for cases when the VM is deployed into an existing VNet"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet-zoomdata",
      "metadata": {
        "description": "Virtual Network name"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Virtual Network Address Prefix (i.e. CIDR)"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Virtual machines will be deployed into this subnet within the Virtual Network"
      }
    },
    "subnet1AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Virtual Network subnet Address Prefix (i.e. CIDR)"
      }
    },
    "company": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Company name"
      }
    },
    "firstName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "First name"
      }
    },
    "lastName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Last name"
      }
    },
    "email": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Email address"
      }
    },
    "businessPhone": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Business phone"
      }
    },
    "jobRole": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Job role"
      }
    },
    "jobFunction": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Job function"
      }
    }
  },
  "variables": {
    "apiVersions": {
      "resources": {
        "deployments": "2016-02-01"
      },
      "storage": {
        "storageAccounts": "2015-06-15"
      },
      "network": {
        "virtualNetworks": "2016-03-30",
        "networkInterfaces": "2016-03-30",
        "loadBalancers": "2016-03-30",
        "publicIPAddresses": "2016-03-30",
        "networkSecurityGroups": "2016-03-30"
      },
      "compute": {
        "availabilitySets": "2016-03-30",
        "virtualMachines": "2016-03-30",
        "virtualMachineExtensions": "2016-03-30"
      }
    },
    "baseUrl": "[concat(parameters('artifactsBaseUrl'),'/')]",
    "templateUrlVnet": "[concat(variables('baseUrl'),'vnet-',parameters('vnetNewOrExisting'),'.json')]",
    "templateUrlStorageAccount": "[concat(variables('baseUrl'),'storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
    "templateUrlPublicIP": "[concat(variables('baseUrl'),'publicIP-',parameters('publicIPNewOrExisting'),'.json')]",
    "scriptUrlInit": "[concat(variables('baseUrl'),'init.sh')]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "linuxConfiguration_sshPublicKey": {
      "disablePasswordAuthentication": "true",
      "ssh": {
        "publicKeys": [
          {
            "path": "[variables('sshKeyPath')]",
            "keyData": "[parameters('sshPublicKey')]"
          }
        ]
      }
    },
    "linuxConfiguration_password": { },
    "linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('authenticationType')))]",
    "vnetID": "[resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnet1ID": "[concat(variables('vnetID'), '/subnets/', parameters('subnet1Name'))]",
    "publicIPID": "[resourceId(parameters('publicIPAddressResourceGroup'), 'Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",
    "nicName": "[concat(parameters('vmName'),'-nic')]",
    "networkSecurityGroupName": "[concat(parameters('vmName'),'-nsg')]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersions').resources.deployments]",
      "type": "Microsoft.Resources/deployments",
      "name": "storageAccount",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateUrlStorageAccount')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersions": {
            "value": "[variables('apiVersions')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountResourceGroup": {
            "value": "[parameters('storageAccountResourceGroup')]"
          },
          "storageAccount": {
            "value": "[parameters('storageAccount')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersions').resources.deployments]",
      "type": "Microsoft.Resources/deployments",
      "name": "vnet",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateUrlVnet')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersions": {
            "value": "[variables('apiVersions')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetResourceGroup": {
            "value": "[parameters('vnetResourceGroup')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "subnet1Name": {
            "value": "[parameters('subnet1Name')]"
          },
          "subnet1AddressPrefix": {
            "value": "[parameters('subnet1AddressPrefix')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersions').resources.deployments]",
      "type": "Microsoft.Resources/deployments",
      "name": "publicIP",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateUrlPublicIP')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersions": {
            "value": "[variables('apiVersions')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPAddressName": {
            "value": "[parameters('publicIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "Dynamic"
          },
          "dnsName": {
            "value": "[parameters('dnsName')]"
          },
          "publicIPAddressResourceGroup": {
            "value": "[parameters('publicIPAddressResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersions').network.networkSecurityGroups]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','vnet')]",
        "[concat('Microsoft.Resources/deployments/','publicIP')]"
      ],
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "description": "HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1200,
              "direction": "Inbound"
            }
          },
          {
            "name": "https",
            "properties": {
              "description": "HTTPS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersions').network.networkInterfaces]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','vnet')]",
        "[concat('Microsoft.Resources/deployments/','publicIP')]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[variables('publicIPID')]"
              },
              "subnet": {
                "id": "[reference('Microsoft.Resources/deployments/vnet',variables('apiVersions').resources.deployments).outputs.subnet1ID.value]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersions').compute.virtualMachines]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "plan": {
        "name": "server-byol",
        "publisher": "zoomdata",
        "product": "zoomdata-server"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','storageAccount')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "zoomdata",
            "offer": "zoomdata-server",
            "sku": "server-byol",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'),'-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccount'),'.blob.core.windows.net/vhds/',parameters('vmName'),'-osdisk.vhd')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersions').compute.virtualMachineExtensions]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), '/init')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.5",
        "settings": {
          "fileUris": [
            "[variables('scriptUrlInit')]"
          ],
          "commandToExecute": "[concat('sh init.sh', ' -d ', reference('publicIP').outputs.fqdn.value, ' -c \"', parameters('company'), '\" -f \"', parameters('firstName'), '\" -l \"', parameters('lastName'), '\" -e \"', parameters('email'), '\" -p \"', parameters('businessPhone'), '\" -r \"', parameters('jobRole'), '\" -j \"', parameters('jobFunction'), '\"')]"
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[reference('publicIP').outputs.fqdn.value]"
    }
  }
}
